version: '3'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: code-engine.svg
  required:
    - build
    - repo
  info:
    git url: >
      "[" + $env.repository + "](" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "](" + $env.repository +
          "/tree/" + $env.branch + ")"
    hosted_region: "" # this is set automatically by DevOps
  wizard:
    $ref: wizard.yml
toolchain:
  name: $env.toolchainName || 'code-engine-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  sm-vault:
    service_id: secretsmanager
    parameters:
      name: >
        $env.smName ? '{{smName}}' : 'sm-compliance-secrets'
      region: >
        $env.smRegion ? '{{smRegion}}' : ''
      resource-group: >
        $env.smResourceGroup ? '{{smResourceGroup}}' : ''
      instance-name: >
        $env.smInstanceName ? '{{smInstanceName}}' : ''
  repo:
    # must do logic this way instead of
    # `service_id: $env.source_provider || 'hostedgit'`
    # or source_provider doesn't work
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: '{{toolchain.name}}'
      repo_url: >
        if ($env.type === 'link') {
          $env.app_repo
        } else if ($env.sourceZipUrl) {
          $env.sourceZipUrl
        } else if ($env.template.info.hosted_region === "") {
          'https://github.com/open-toolchain/hello-helm'
        } else {
          'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/hello-helm'
        }
      source_repo_url: >
        if ($env.type === 'fork' || $env.type === 'clone') {
          $env.app_repo
        } else if ($env.sourceZipUrl) {
          $env.sourceZipUrl
        } else if ($env.template.info.hosted_region === "") {
          'https://github.com/open-toolchain/hello-helm'
        } else {
          'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/hello-helm'
        }
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: false
      source_provider: >
        $env.source_provider ? $env.source_provider : 'hostedgit'
  pipeline-repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: '{{toolchain.name}}-pipeline'
      repo_url: $env.repository
      source_repo_url: $env.services.pipeline-repo.parameters.repo_url
      type: >
        if ($env.source_provider === "github_integrated") {
          'link'
        } else {
          'clone'
        }
      has_issues: false
      enable_traceability: false
      kind: ['pipeline']
  tekton-catalog-repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: '{{toolchain.name}}-tekton-catalog'
      repo_url:  >
        if ($env.source_provider === "github_integrated") {
          "https://github.ibm.com/open-toolchain/tekton-catalog"
        } else {
          if ($env.template.info.hosted_region === "") {
            "https://github.com/open-toolchain/tekton-catalog"
          } else {
            "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/tekton-catalog"
          }
        }
      source_repo_url: $env.services.tekton-catalog-repo.parameters.repo_url
      type: >
        if ($env.source_provider === "github_integrated") {
          'link'
        } else {
          'clone'
        }
      has_issues: false
      enable_traceability: false
      kind: ['pipeline']
  pr:
    service_id: 'pipeline'
    parameters:
      services:
        - repo
        - tekton-catalog-repo
      name: 'pr-pipeline'
      type: 'tekton'
      ui-pipeline: true
      configuration:
        content:
          $text: tekton-pr-pipeline.yml
        env:
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          APP_NAME: "{{form.pipeline.parameters.app-name}}"
          APP_REPO: repo
          APP_REPO_BRANCH: >
            if ($env.template.info.hosted_region === "" || $env.sourceZipUrl) {
              'master'
            } else {
              'main'
            }
          ARTIFACTORY_DOCKER_CONFIG_JSON: '{{form.artifactoryComp.parameters.docker_config_json}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-pr-listener';
            } else if ( $env.source_provider === 'gitlab' ) {
              'gitlab-pr-listener';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-pr-listener';
            } else {
              'gitlab-pr-listener';
            }
          IBMCLOUD_API: >
            if ( $env.env_id === 'ibm:ys1:us-south' || $env.env_id === 'ibm:ys1:eu-gb' ) {
              "https://test.cloud.ibm.com"
            } else {
              "https://cloud.ibm.com"
            }
          PIPELINE_REPO: pipeline-repo
          PIPELINE_REPO_BRANCH: >
            if ($env.branch) {
              $env.branch
            } else if ($env.template.info.hosted_region === "") {
              'master'
            } else {
              'main'
            }
          PRIVATE_WORKER: '{{services.privateWorker.parameters.name}}'
          REGISTRY_REGION_ID: "{{form.pipeline.parameters.registry-region}}"
          REGISTRY_NAMESPACE: "{{form.pipeline.parameters.registry-namespace}}"
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          TEKTON_CATALOG_REPO_BRANCH: >
            if ($env.source_provider === "github_integrated") {
              'main'
            } else if ($env.template.info.hosted_region === "") {
              'master'
            } else {
              'main'
            }
        execute: false
  build:
    service_id: pipeline
    parameters:
      services:
        - repo
      name: 'ci-pipeline'
      ui-pipeline: true
      type: 'tekton'
      configuration:
        content:
          $text: tekton-ci-pipeline.yml
        env:
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          APP_NAME: '{{form.pipeline.parameters.app-name}}'
          APP_REPO: repo
          APP_REPO_BRANCH: >
            if ($env.template.info.hosted_region === "" || $env.sourceZipUrl) {
              'master'
            } else {
              'main'
            }
          CODE_ENGINE_PROJECT: '{{form.pipeline.parameters.code-engine-project}}'
          CODE_ENGINE_REGION: '{{form.pipeline.parameters.code-engine-region}}'
          CODE_ENGINE_RESOURCE_GROUP: '{{form.pipeline.parameters.code-engine-resource-group}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          IBMCLOUD_API: >
            if ( $env.env_id === 'ibm:ys1:us-south' || $env.env_id === 'ibm:ys1:eu-gb' ) {
              "https://test.cloud.ibm.com"
            } else {
              "https://cloud.ibm.com"
            }
          PIPELINE_REPO: pipeline-repo
          PIPELINE_REPO_BRANCH: >
            if ($env.branch) {
              $env.branch
            } else if ($env.template.info.hosted_region === "") {
              'master'
            } else {
              'main'
            }
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          SERVICE_BINDINGS: '{{form.pipeline.parameters.service-bindings}}'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          TEKTON_CATALOG_REPO_BRANCH: >
            if ($env.source_provider === "github_integrated") {
              'main'
            } else if ($env.template.info.hosted_region === "") {
              'master'
            } else {
              'main'
            }
          BUILD_STRATEGY: '{{form.buildpipeline.parameters.strategy}}' 
          DEPLOYMENT_TYPE: '{{form.buildpipeline.parameters.deployment}}' 
        execute: 'manual-run'
  deploy:
    service_id: pipeline
    parameters:
      services:
        - repo
      name: 'cd-pipeline'
      ui-pipeline: true
      type: 'tekton'
      configuration:
        content:
          $text: tekton-cd-pipeline.yml
        env:
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          APP_NAME: '{{form.pipeline.parameters.app-name}}'
          APP_REPO: repo
          CODE_ENGINE_PROJECT: '{{form.pipeline.parameters.code-engine-project}}'
          CODE_ENGINE_REGION: '{{form.pipeline.parameters.code-engine-region}}'
          CODE_ENGINE_RESOURCE_GROUP: '{{form.pipeline.parameters.code-engine-resource-group}}'
          IBMCLOUD_API: >
            if ( $env.env_id === 'ibm:ys1:us-south' || $env.env_id === 'ibm:ys1:eu-gb' ) {
              "https://test.cloud.ibm.com"
            } else {
              "https://cloud.ibm.com"
            }
          PIPELINE_REPO: pipeline-repo
          PIPELINE_REPO_BRANCH: >
            if ($env.branch) {
              $env.branch
            } else if ($env.template.info.hosted_region === "") {
              'master'
            } else {
              'main'
            }
          SERVICE_BINDINGS: '{{form.pipeline.parameters.service-bindings}}'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          TEKTON_CATALOG_REPO_BRANCH: >
            if ($env.source_provider === "github_integrated") {
              'main'
            } else if ($env.template.info.hosted_region === "") {
              'master'
            } else {
              'main'
            }
          DEPLOYMENT_TYPE: '{{form.buildpipeline.parameters.deployment}}' 
  devops-insights:
      service_id: 'draservicebroker'
form:
  pipeline:
    parameters:
      app-name: $env.appName || '{{services.repo.parameters.repo_name}}'
      registry-region: '{{registryRegion}}'
      registry-namespace: '{{registryNamespace}}'
      api-key: '{{apiKey}}'
      code-engine-project: '{{codeEngineProject}}'
      code-engine-region: '{{codeEngineRegion}}'
      code-engine-resource-group: '{{codeEngineResourceGroup}}'
      service-bindings: '{{serviceBindingsBase64}}'
    schema:
      $ref: form-schema.json
  buildpipeline:
    parameters:
      strategy: >
        $env.strategy ?
          '{{strategy}}' : 'dockerfile'
      deployment: >
        $env.deployment ?
          '{{deployment}}' : 'application'
    schema:
      $ref: wizard_deployment_type.json
